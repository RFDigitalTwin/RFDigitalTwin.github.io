1:"$Sreact.fragment"
2:I[18423,["177","static/chunks/app/layout-30112eed97c08ba4.js"],"default"]
3:I[87555,[],""]
4:I[31295,[],""]
5:I[91573,["274","static/chunks/274-f89b566e52fd4eb3.js","874","static/chunks/874-3e820bd666038662.js","499","static/chunks/app/docs/layout-bad44f4195ad99e8.js"],"default"]
6:I[65565,["274","static/chunks/274-f89b566e52fd4eb3.js","874","static/chunks/874-3e820bd666038662.js","499","static/chunks/app/docs/layout-bad44f4195ad99e8.js"],"default"]
7:I[90885,["313","static/chunks/313-59b0cddb5150df42.js","444","static/chunks/444-746f01fa27de7393.js","669","static/chunks/app/docs/installation/page-b68ce71c38f683de.js"],"default"]
b:I[28393,[],""]
:HL["/_next/static/css/dcb6f1730826ef68.css","style"]
8:T1310,# Installation Guide

This guide will help you install WiTwin and set up your development environment.

## System Requirements

Before installing WiTwin, ensure your system meets these requirements:

### Minimum Requirements
- **OS**: Windows 10+, Ubuntu 20.04+, macOS 11+
- **Python**: 3.8 or higher
- **RAM**: 8 GB
- **GPU**: NVIDIA GPU with CUDA 11.0+ support (4GB VRAM)
- **Storage**: 10 GB free space

### Recommended Requirements
- **OS**: Ubuntu 22.04 or Windows 11
- **Python**: 3.10 or 3.11
- **RAM**: 32 GB or more
- **GPU**: NVIDIA RTX 3080 or better (12GB+ VRAM)
- **Storage**: 50 GB free space (for datasets)

## Quick Install

The easiest way to install WiTwin is via pip:

```bash
pip install witwin
```

This will install the latest stable version with all core dependencies.

## Advanced Installation

### GPU Support

For GPU acceleration (highly recommended), install CUDA dependencies:

```bash
# Install CUDA toolkit (if not already installed)
# Visit: https://developer.nvidia.com/cuda-downloads

# Install WiTwin with GPU support
pip install witwin[gpu]
```

### Development Installation

For contributing or accessing the latest features:

```bash
# Clone the repository
git clone https://github.com/witwin/witwin.git
cd witwin

# Create virtual environment
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

# Install in development mode
pip install -e .[dev]
```

### Docker Installation

For containerized deployments:

```bash
# Pull the official Docker image
docker pull witwin/witwin:latest

# Run with GPU support
docker run --gpus all -it witwin/witwin:latest
```

## Dependency Management

### Core Dependencies
WiTwin automatically installs these packages:
- `numpy>=1.21.0` - Numerical computing
- `scipy>=1.7.0` - Scientific computing
- `torch>=1.10.0` - Deep learning and GPU acceleration
- `matplotlib>=3.4.0` - Visualization
- `pandas>=1.3.0` - Data manipulation

### Optional Dependencies

Install additional packages for specific features:

```bash
# For advanced visualization
pip install witwin[viz]

# For machine learning integration
pip install witwin[ml]

# For all optional features
pip install witwin[all]
```

## Platform-Specific Instructions

### Windows

1. Install Visual Studio Build Tools:
   ```powershell
   # Download from Microsoft
   # https://visualstudio.microsoft.com/downloads/
   ```

2. Install WiTwin:
   ```powershell
   pip install witwin
   ```

3. Verify CUDA installation:
   ```powershell
   nvidia-smi
   python -c "import torch; print(torch.cuda.is_available())"
   ```

### macOS

For Apple Silicon (M1/M2) Macs:

```bash
# Install using conda for better compatibility
conda create -n witwin python=3.10
conda activate witwin
conda install pytorch torchvision -c pytorch
pip install witwin
```

### Linux

Ubuntu/Debian:
```bash
# Install system dependencies
sudo apt-get update
sudo apt-get install -y python3-dev build-essential

# Install WiTwin
pip install witwin
```

## Verification

Verify your installation:

```python
# Check installation
python -c "import witwin; print(witwin.__version__)"

# Run system check
python -m witwin.check_system
```

Expected output:
```
WiTwin v2.0.0
âœ“ Python 3.10.0
âœ“ CUDA 11.8 available
âœ“ GPU: NVIDIA GeForce RTX 3080 (12GB)
âœ“ All systems operational
```

## Environment Setup

### Jupyter Notebook

For interactive development:

```bash
pip install jupyter
jupyter notebook
```

### VS Code Integration

1. Install Python extension
2. Set Python interpreter to your WiTwin environment
3. Install recommended extensions:
   - Python Docstring Generator
   - Python Test Explorer
   - GitLens

### PyCharm Setup

1. Create new project with existing interpreter
2. Point to your WiTwin virtual environment
3. Enable scientific mode for enhanced visualization

## Troubleshooting

### Common Issues

**ImportError: No module named 'witwin'**
```bash
# Ensure pip is updated
pip install --upgrade pip
pip install witwin
```

**CUDA not available**
```bash
# Check CUDA installation
nvidia-smi
nvcc --version

# Reinstall PyTorch with CUDA
pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118
```

**Memory errors**
```python
# Set memory growth for GPU
import os
os.environ['TF_FORCE_GPU_ALLOW_GROWTH'] = 'true'
```

### Getting Help

If you encounter issues:

1. Check our [FAQ](https://docs.witwin.ai/faq)
2. Search [GitHub Issues](https://github.com/witwin/witwin/issues)
3. Join our [Discord community](https://discord.gg/witwin)
4. Contact support: support@witwin.ai

## Next Steps

Now that WiTwin is installed, you're ready to:

- Follow the [Quick Start Guide](/docs/quick-start)
- Explore [example notebooks](https://github.com/witwin/witwin/tree/main/examples)
- Read the [API documentation](/docs/api)

---

*Congratulations! You're ready to start building wireless digital twins.* ðŸŽ‰0:{"P":null,"b":"LxGOVeIeEEk2Ycth8XaAT","p":"","c":["","docs","installation"],"i":false,"f":[[["",{"children":["docs",{"children":["installation",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/dcb6f1730826ef68.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"dark","children":["$","body",null,{"className":"__className_e8ce0c min-h-screen bg-background antialiased","children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]]}],{"children":["docs",["$","$1","c",{"children":[null,[["$","$L5",null,{}],["$","$L6",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]}]]]}],{"children":["installation",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"className":"animate-fadeIn","children":["$","$L7",null,{"content":"$8"}]}],null,"$L9"]}],{},null,false]},null,false]},null,false]},null,false],"$La",false]],"m":"$undefined","G":["$b",[]],"s":false,"S":true}
c:I[59665,[],"OutletBoundary"]
e:I[74911,[],"AsyncMetadataOutlet"]
10:I[59665,[],"ViewportBoundary"]
12:I[59665,[],"MetadataBoundary"]
13:"$Sreact.suspense"
9:["$","$Lc",null,{"children":["$Ld",["$","$Le",null,{"promise":"$@f"}]]}]
a:["$","$1","h",{"children":[null,[["$","$L10",null,{"children":"$L11"}],null],["$","$L12",null,{"children":["$","div",null,{"hidden":true,"children":["$","$13",null,{"fallback":null,"children":"$L14"}]}]}]]}]
11:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
d:null
f:{"metadata":[["$","title","0",{"children":"RFDT - The RF Digital Twin"}],["$","meta","1",{"name":"description","content":"Real-time physics simulation and RF digital twin platform"}]],"error":null,"digest":"$undefined"}
14:"$f:metadata"
